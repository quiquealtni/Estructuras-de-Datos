<project name="Estructuras" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="libs" location="libs"/>
  <property name="tests" location="test"/>
  <property name="build" location="build"/>
  <property name="build.test" location="build.test"/>
  <property name="docs" location="docs"/>
  <property name="tests.report" location="reportes"/>
  <property name="dist"  location="dist"/>

  <!-- Define the classpath which includes the libs -->
  <path id="project.class.path">
    <pathelement location="${libs}/junit-4.12.jar" />
    <pathelement location="${libs}/hamcrest-core-1.3.jar" />
    <pathelement location="${build}" />
    <pathelement location="${build.test}"/>
  </path>
  
  <target name="run" depends="compile">
    <java classname="ed.estructuras.Conjunto" fork="true">
      <classpath>
	<pathelement path="build" />
      </classpath>
    </java>
  </target>
  
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="compiletests" depends="compile"
        description="compile JUnit tests" >
    <!-- Create the build directory structure for the tests -->
    <mkdir dir="${build.test}"/>
    <!-- Compile the tests -->
    <javac includeantruntime="false" srcdir="${tests}" destdir="${build.test}">
      <classpath refid="project.class.path" />
    </javac>
  </target>

  <target name="test" depends="compiletests"
        description="executes JUnit tests " >
    <mkdir dir="${tests.report}" />
    <!-- Details in: https://ant.apache.org/manual/Tasks/junit.html -->
    <junit fork="true" printsummary="yes" showoutput="yes" haltonfailure="yes">
      <classpath refid="project.class.path" />
      <formatter type="plain"/>
      <batchtest todir="${tests.report}">
        <fileset dir="${tests}">
          <include name="**/*Test*.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="dist" depends="test"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/${ant.project.name}-${DSTAMP}.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${build.test}"/>
    <delete dir="${tests.report}"/>
    <delete dir="${docs}"/>
    <delete>
      <fileset dir="." includes="**/*~" defaultexcludes="false" />
    </delete>
  </target>

 <target name="docs" description="generate javadoc" >
    <javadoc destdir="${docs}"
             author="true"
             version="true"
             windowtitle="${ant.project.name}">
      <fileset dir="${src}" defaultexcludes="yes">
        <include name="**/*.java"/>
      </fileset>
    </javadoc>
 </target>
</project>
